apiVersion: v1
kind: Pod
metadata:
  name: testpod
  # annotations:
  #   container.apparmor.security.beta.kubernetes.io/junk: unconfined
spec:
  # hostIPC: true
  automountServiceAccountToken: false
  # ephemeralContainers:
  # - name: ephemjunk
  #   image: ephemasdfnothinghereasdf
  #   securityContext:
  #     windowsOptions:
  #       runAsUserName: foobar
        # hostProcess: true
  # initContainers:
  # - name: initjunk
  #   image: initasdfnothinghereasdf
  #   ports:
  #     - name: bazport
  #       containerPort: 8888
  #       hostPort: 27
  #     - name: binport
  #       containerPort: 9999
        # hostPort: 1234
  # securityContext:
  #   seLinuxOptions:
  #     type: container_t
  #     user: ""
  #     role: foo
  #     privileged: false
  #     capabilities:
  #       add:
  #       - SETUID
  #       - FOOBAR
  containers:
  - name: junk
    image: busybox:1.28
    args:
    - sleep
    - "9999"
    # ports:
    #   - name: fooport
    #     containerPort: 8888
    #     hostPort: 2222
    #   - name: barport
    #     containerPort: 9999
    #     hostPort: 4444
    # securityContext:
    #   seLinuxOptions:
    #     role: foo
    #     type: container_t
    # #   privileged: false
        # runAsUserName: foobar
    # imagePullPolicy: Always
    # securityContext:
    #   capabilities:
    #     add:
    #     - KILL
  # - name: nginx
  #   image: fasdafasfsa:latest
  #   ports:
  #     - name: nginxport
  #       containerPort: 8888
  #       hostPort: 0
  #     - name: notnginxport
  #       containerPort: 9999
  #       hostPort: 0
  #   securityContext:
  #     privileged: true
  #     capabilities:
  #       drop:
  #       - NET_BIND_SERVICE
  #   resources:
  #     requests:
  #       cpu: "100m"
  #       memory: "50Mi"
  #     limits:
  #       cpu: "200m"
  #       memory: "100Mi"
  #   securityContext:
  #     runAsNonRoot: true
  # - name: liveness
  #   image: k8s.gcr.io/liveness
  #   args:
  #   - /server
    # livenessProbe:
    #   tcpSocket:
    #     port: 2990
    #   httpGet:
    #     path: /healthz
    #     port: 8080
    #     httpHeaders:
    #     - name: Custom-Header
    #       value: Awesome
    #   initialDelaySeconds: 3
    #   periodSeconds: 3
    # readinessProbe:
      # exec:
      #   command:
      #   - test
      # tcpSocket:
      #   port: 3000
      # httpGet:
      #   path: /healthz
      #   port: 8080
      #   httpHeaders:
      #   - name: Custom-Header
      #     value: Awesome
      # initialDelaySeconds: 3
      # periodSeconds: 3
  # volumes:
  # - name: socket
    # hostPath:
    #   path: "/var/run/dockera.sock"
